package mycatDemo;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.Selector;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Set;

public class ServerDemo {

	public static void main(String[] args) throws IOException {
		
		Selector sc=Selector.open();
		
		ServerSocketChannel ssc=ServerSocketChannel.open();
		
		ssc.bind(new InetSocketAddress("127.0.0.1", 7777));
		
		ssc.configureBlocking(false);
		
		ssc.register(sc, SelectionKey.OP_ACCEPT);
		
		while(true) {
			
			Set<SelectionKey> keys=sc.selectedKeys();
			
			for (SelectionKey key : keys) {
				if(key.isAcceptable()) {
					SocketChannel channl=((ServerSocketChannel) key.channel()).accept();
					channl.configureBlocking(false);
					channl.register(sc, SelectionKey.OP_READ, ByteBuffer.allocate(1024));
				}
				if(key.isReadable()) {
					SocketChannel channl=(SocketChannel) key.channel();
					
					ByteBuffer buff=(ByteBuffer) key.attachment();
					
					channl.read(buff);
					
					key.interestOps(SelectionKey.OP_READ|SelectionKey.OP_WRITE);
				if(key.isWritable()) {
				
					/*SocketChannel channel1=(SocketChannel) key.channel();
					
					ByteBuffer buff1=ByteBuffer.allocate(1024);*/
					
					key.interestOps(SelectionKey.OP_READ);
					
					}
					
				}
				keys.remove(key);
			}
			
		}
		
		
	}
}
